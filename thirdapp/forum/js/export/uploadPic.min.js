!function e(t, i, n) {
    function a(r, s) {
        if (!i[r]) {
            if (!t[r]) {
                var l = "function" == typeof require && require;
                if (!s && l)
                    return l(r, !0);
                if (o)
                    return o(r, !0);
                throw new Error("Cannot find module '" + r + "'")
            }
            var c = i[r] = {
                exports: {}
            };
            t[r][0].call(c.exports, function(e) {
                var i = t[r][1][e];
                return a(i ? i : e)
            }, c, c.exports, e, t, i, n)
        }
        return i[r].exports
    }
    for (var o = "function" == typeof require && require, r = 0; r < n.length; r++)
        a(n[r]);
    return a
}({
    1: [function(e, t) {
        function i(opt, isYZJApp) {
		    this.boxWrap = opt.boxWrap; //要显示的输入框
		    this.searchBool = false;   //是否是搜索请求数据
		    this.windowHeight = opt.windowHeight;  //窗口的高度
		    this.sendBtn = opt.sendBtn; //发送按钮
		    var requestUrl = new n();

		    if (typeof(opt.aiteWrap) == undefined || opt.aiteWrap.length == 0) {
		        this.aiteWrap = null;
		    } else {
		        this.aiteWrap = opt.aiteWrap;
		    }

		    var _this = this;
		    $(window).on('popstate', function () {
		        _this.scrollAuto();
		        _this.aiteWrap.fadeOut();
		        if (_this.searchBool) {
		            _this.aiteWrap.remove();
		        }
		    });


		    this.init = function (cb) {
		        var _this = this;
		        _this.cb = cb;

		        if (typeof _this == undefined) {
		            return;
		        }
		        this.scrollHidden();
		        if (!_this.aiteWrap) {

		            var personWrap = _this.tpl();
		            _this.aiteWrap = personWrap;
		            _this.aiteWrap.appendTo(document.body);

		            //搜索按钮的点击事件
		            $("#searchAiteBtn", _this.aiteWrap).click(function () {
		                var keyword = $(".searchContent", _this.aiteWrap).val();
		                if (keyword != null && keyword != "") {
		                    _this.searchContact();
		                }
		            });

		            //删除事件
		            $(".del-search", _this.aiteWrap).on('click', function () {
		                $(".searchContent", _this.aiteWrap).val("");
		                $(".searchContent", _this.aiteWrap).focus();
		                $(".del-search", _this.aiteWrap).css("display", "none");
		            });

		            //输入事件
		            $(".keyword", _this.aiteWrap).on('keyup', function () {
		                var _value = $(this).val();
		                if (_value != null && _value != "") {
		                    $(".del-search", _this.aiteWrap).css("display", "inline-block");
		                } else {
		                    $(".del-search", _this.aiteWrap).css("display", "none");
		                }
		            });

		            //获取焦点事件
		            $(".keyword", _this.aiteWrap).on('focus', function () {
		                if ($(this).val() == "" || $(this).val() == null) {
		                    $(this).val(" ");
		                }
		            });

		            //从同事圈选择
		            $(".select-from-app span", _this.aiteWrap).on('click', function () {
		                var aiteTmp = _this.sendBtn.attr('data-yzj-aite');
		                XuntongJSBridge.call('selectPerson', {'isMulti': true}, function (result) {
		                    if (result.success == 'true' || result.success === true) {
		                        $.each(result.data.persons, function (index, item) {
		                            Tribe.util.insert(_this.boxWrap[0], Tribe.util.getCaret(_this.boxWrap[0]), "@" + item.personName + "  ");
		                            if (aiteTmp == '')aiteTmp = item.personName + ':' + item.personId;
		                            else aiteTmp = aiteTmp + ',' + item.personName + ':' + item.personId;
		                        });
		                        _this.sendBtn.attr('data-yzj-aite', aiteTmp);
		                        _this.aiteWrap.fadeOut();
		                    }
		                });
		            });

		            _this.getData();
		            history.pushState('aiteList', '联系人', '');

		        } else {

		            _this.aiteWrap.fadeIn();
		            history.pushState('aiteList', '联系人', '');
		        }
		    };

		    this.tpl = function () {

		        var tplString = '';
		        if (isYZJApp)tplString = "<div class='select-from-app'><span>从同事中选择</span></div>";
		        return $("<div class='person-list-wrapper topic-list-wrapper none'  style='height:" + this.windowHeight + "px'>" +
		            tplString +
		            "<div class='wordsEditor'>" +
		            "<div class='wordsBox'>" +
		            "<input class='searchContent keyword' placeholder='输入用户名' />" +
		            "<a class='del-search'></a>" +
		            "</div><a id='searchAiteBtn' class='search-btn'>搜 索</a></div>" +
		            "<p class='titleTab titName'></p>" +
		            "<ul style='' class='contactList'></ul></div>");
		    };

		    this.tplJude = function (wrap, data) {
		        var _this = this;
		        var parentWrap = $(wrap).find('ul');
		        var data = data;

		        if (typeof(data) == undefined || data.length == 0) {
		            var txt = $(".searchContent", _this.aiteWrap).val();
		            if (txt == undefined) {
		                txt = "";
		            }
		            if (this.searchBool) {
		                $(".titleTab", _this.aiteWrap).text("搜索结果");
		                $(".contactList", _this.aiteWrap).text("已经尽力了，还是找不到" + txt + "");
		            } else {
		                $(".titleTab", _this.aiteWrap).text("最近联系人");
		                $(".contactList", _this.aiteWrap).text("");
		            }

		        } else {
	                _.each(data, function (item) {
	                    var str = _this.chooseItem(item);

	                    parentWrap.append(str);

	                    $(str).click(function () {
	                        var _b = item;
	                        return function () {
	                            _this.itemChoose(_b);
	                        }
	                    }());
	                });
		        }
		        if (!_this.searchBool) {
		            _this.aiteWrap.fadeIn();
		        }
		        //初始化列表高度
		        var ul_height = $(window).height() - $(".wordsEditor").height() - $(".titName").height();
		        if (ul_height && ul_height > 0) {
		            $(".contactList").css("height", ul_height + "px");
		        }
		    };

		    this.chooseItem = function (data) {

		        var item = "<li class='aite-item' id='<%=id%>'><span class='aite-img avatar'>" +
		            "<%if(avatarUrl == undefined || avatarUrl == ''){%>" +
		            "<img src='/thirdapp/forum/img/load.png' class='avatar-img'/>" +
		            "<%}else{%>" +
		            "<img src='<%=avatarUrl%>' class='avatar-img'/>" +
		            "<%}%></span>" +
		            "<span class='name'><b><%=name%></b></span>" +
		            "</li>";
		        item = $(_.template(item)(data));

		        return item;
		    };


		    this.itemChoose = function (data) {
		        var _this = this;
		        var manName = data.name;

		        this.scrollHidden();

		        var txt = _this.boxWrap.text();
		        if (data.id == "") {
		            Tribe.util.insert(_this.boxWrap[0], Tribe.util.getCaret(_this.boxWrap[0]), "@all  ");
		        } else {
		            Tribe.util.insert(_this.boxWrap[0], Tribe.util.getCaret(_this.boxWrap[0]), "@" + manName + "  ");
		            var aiteTmp = _this.sendBtn.attr('data-wx-aite');
		            if (aiteTmp == '')aiteTmp = data.name + ':' + data.id;
		            else aiteTmp = aiteTmp + ',' + data.name + ':' + data.id;
		            _this.sendBtn.attr('data-wx-aite', aiteTmp);
		        }

		        _this.aiteWrap.fadeOut();
		        if (_this.searchBool) {
		            _this.aiteWrap.remove();
		            _this.aiteWrap = null;
		        }

		        $(".searchContent", _this.aiteWrap).val("");
		        _this.searchBool = false;

		        _this.boxWrap.focus();
		        var txtValue = _this.boxWrap.val();
		        _this.boxWrap.val("");
		        _this.boxWrap.val(txtValue);
		        if (typeof _this.cb == "function") {
		            _this.cb();
		        }
		    };

		    this.searchContact = function () {

		        var txt = $(".searchContent", this.aiteWrap).val();
		        this.searchBool = true;
		        var data = this.getData();

		    };

		    this.getData = function () {
		        var _this = this;
		        var criteria = $(".searchContent", this.aiteWrap).val();
		        if (!criteria || criteria == "" || criteria == null) {
		            criteria = '';
		        }

		        $.ajax({
		            type: 'get',
		            url: urlarr['recentContacts'],
		            dataType: 'json',
		            data: {'userId': Tribe.userId}
		        }).done(function (resp) {
		            if (resp.error != undefined) {
		                console.log("请求最近联系人列表错误");
		                return;
		            }
		            if (_this.searchBool) {
		                $(".titleTab", this.aiteWrap).text("搜索结果");
		            } else {
		                $(".titleTab", _this.aiteWrap).text("最近联系人");
		            }
		            $(".contactList", this.aiteWrap).text("");

		            //添加列表项
		            _this.tplJude(_this.aiteWrap, resp);

		        });

		    };

		    this.scrollAuto = function () {
		        $('body').css("height", "auto");
		        document.body.style.overflow = 'auto';
		        document.documentElement.style.overflow = 'auto';
		    };

		    this.scrollHidden = function () {
		        var _height = $(window).height();
		        $('body').css("height", _height + 'px');
		        document.body.style.overflow = 'hidden';
		        document.documentElement.style.overflow = 'hidden';
		    };
		}
        var n = e("../lib/public/requestUrl").RequestUrl;
        t.exports = i
    }
    , {
        "../lib/public/requestUrl": 15
    }],
    5: [function(e, t) {
        "use strict";
        var i = function() {
            var e = $.Deferred();
            return $.ajax({
                url: "thirdapp/forum/getUser",
                dataType: "json"
            }).then(function(t) {
                t && t.success ? e.resolve(t) : e.reject(t && t.message.error_description || "获取用户信息失败")
            }, function(t) {
                e.reject(t || "获取用户信息失败")
            }),
            e.promise()
        }
        ;
        t.exports = i
    }
    , {}],
    6: [function(e, t) {
        function i(obj) {
		    if (typeof obj == undefined) return;
		    var _this = obj;
		    $(_this).parents('.upload_append_list').remove();
		    var arr = $("#sendMsg").attr('data-fileids').split(',');
		    for (var i = 0; i < arr.length; i++) {
		        if ($(_this).attr('data-fileid') == arr[i]) {
		            arr.splice(i, 1);
		        }
		    }
		    $("#sendMsg").attr('data-fileids', arr.toString());
		    if (arr.length === 0) {
		        $("#sendMsg").attr('data-fileids', '');
		        $('#add').hide();
		    }
		    if ($('.upload_append_list').length < 9) {
		        $('#add').css('display', 'inline-block');
		        $(".fileImage").removeAttr('disabled');
		    }
		    if ($('.upload_append_list').length < 1 && $("#editor").html() == "") {
		        $("#sendMsg").addClass('bg-gray');
		    }
        }
        var n = e("../lib/plugin/uploader")
          , a = {
			    // 最大上传多少张
			    url: urlarr.upload,
			    maxNum: 9,
			    fileInput: $(".fileImage"),
			    filter: function (files) {
			        var arrFiles = [];
			        var len = files.length > this.maxNum ? this.maxNum : files.length;
			        var now_len = document.querySelector('.upload-box-container').getElementsByClassName('upload_append_list').length;


			        if ((now_len + len ) > 9) {
			            len = 9 - now_len;
			            Tribe.util.tips("最多只能显示9张图片", 2000);
			        }


			        for (var i = 0; i < len; ++i) {
			            var file = files[i];

			            if (Tribe.util.getOS() == 'ios') {
			                if ("JPG|JPEG|PNG|GIF|".indexOf(file.name.substring(file.name.lastIndexOf('.') + 1).toUpperCase() + '|') > -1) {
			                    if (file.size >= 1024000000) {
			                        Tribe.util.tips('图片"' + file.name + '"文件过大，应小于10M', 2000);
			                    } else {
			                        arrFiles.push(file);
			                    }
			                } else {
			                    Tribe.util.tips('文件"' + file.name + '"不是图片。', 2000);
			                }
			            } else {
			                if (file.size >= 1024000000) {
			                    Tribe.util.tips('图片"' + file.name + '"文件过大，应小于10M', 2000);
			                } else {
			                    arrFiles.push(file);
			                }
			            }
			        }
			        return arrFiles;
			    },
			    onBeforeSend: function (file) {
			        var html = '';
			        html = html + '<div data-id="' + file.index + '" class="upload_append_list">' +
			            '<span class="upload_delete" title="删除" data-index="' + file.index + '"></span>' +
			            '<p>' +
			            '<img id="uploadImage_' + file.index + '" src="" class="upload_image" /></p>' +
			            '<div class="progress" id="uploadProgress_' + file.index + '"><div class="progress-bar"><span class="current-progress"></span></div></div>' +
			            '</div>';
			        var $add = $("#add");
			        $add.before(html);
			    },
			    onSelect: function (file) {
			        var funAppendImage = function () {
			            var reader = new FileReader();
			            reader.readAsDataURL(file);
			            reader.onload = function (e) {
			                var $add = $("#add");
			                var container = document.querySelector('.upload-box-container');
			                var maxWidth = container.parentNode.offsetWidth;
			                var addOffsetLeft = $add[0].offsetLeft;
			                var addWidth = $add[0].offsetWidth;
			                var len = container.getElementsByClassName('upload_append_list').length;

			                if (addOffsetLeft + addWidth > maxWidth && len < 9)
			                    container.style.left = -$add[0].offsetLeft + maxWidth - addWidth + 'px';
			            };
			        };
			        funAppendImage();
			        $('#add').css('display', 'inline-block');
			        $(".fileImage").val("");
			    },
			    onProgress: function (file, loaded, total) {
			        var eleProgress = $("#uploadProgress_" + file.index), percent = (loaded / total * 100).toFixed(2);
			        var maxWidth = eleProgress.width();
			        eleProgress.show().find('.current-progress').css('width', percent / 100 * maxWidth + 'px');
			        $('.upload_delete[data-index="' + file.index + '"]').on('click', function () {
			            clickFun(this);
			        });
			    },
			    onSuccess: function (file, response) {
			        var fileids = $("#sendMsg").attr('data-fileids');
			        $("#sendMsg").attr('data-fileids', (fileids == '') ? response : (fileids += ',' + response));

			        if ($('.upload_append_list').length === 9 || $('.upload_append_list').length > 9) {
			            $('#add').hide();
			            $(".fileImage").attr('disabled', 'disabled')
			        }
			        $('.upload_delete[data-index="' + file.index + '"]').attr('data-fileid', response);
			        var eleProgress = $("#uploadProgress_" + file.index);
			        eleProgress.hide();
			        $('#uploadImage_' + file.index).attr('src', response);
			    },
			    onFailure: function (file) {
			        Tribe.util.tips("上传失败", 2000);
			        $("#uploadImage_" + file.index).closest('.upload_append_list').remove();
			    },
			    onComplete: function () {
			        //file控件value置空
			        $(".fileImage").val("");
			    }
		};
		function clickFun(obj) {
			if (typeof obj == undefined) return;
			var _this = obj;
			$(_this).parents('.upload_append_list').remove();
			var arr = $("#sendMsg").attr('data-fileids').split(',');
			for (var i = 0; i < arr.length; i++) {
				if ($(_this).attr('data-fileid') == arr[i]) {
					arr.splice(i, 1);
				}
			}
			$("#sendMsg").attr('data-fileids', arr.toString());
			if (arr.length === 0) {
				$("#sendMsg").attr('data-fileids', '');
				$('#add').hide();
			}
			if ($('.upload_append_list').length < 9) {
				$('#add').css('display', 'inline-block');
				$(".fileImage").removeAttr('disabled');
			}
		}
        t.exports = $.extend({}, n, a)
    }
    , {
        "../lib/plugin/uploader": 14
    }],
    7: [function(e, t) {
        !function(e, t) {
            function i(t, i) {
                if (t) {
                    i = i || {},
                    this.elem = t,
                    this.maxWidth = i.maxWidth || document.body.clientWidth;
                    var n = {
                        x: null ,
                        y: null ,
                        left: 0,
                        time: null
                    }
                      , a = Object.create(n)
                      , o = !1;
                    this.init = function() {
                        0 != this.maxWidth && this.elem.addEventListener("touchstart", this.startHandler.bind(this), !1)
                    }
                    ,
                    this.startHandler = function(e) {
                        var t = e.touches[0];
                        n.x = t.pageX,
                        n.y = t.pageY;
                        var i = parseInt(window.getComputedStyle(this.elem).left, 10);
                        n.left = i,
                        n.time = +new Date,
                        o = !1,
                        this.isMovable() && (this.elem.addEventListener("touchmove", this.moveHandler.bind(this), !1),
                        this.elem.addEventListener("touchend", this.endHandler.bind(this), !1))
                    }
                    ,
                    this.moveHandler = function(e) {
                        if (!(e.touches.length > 1 || e.scale && 1 !== e.scale)) {
                            var t = e.touches[0];
                            if (a.x = t.pageX - n.x,
                            a.y = t.pageY - n.y,
                            Math.abs(a.y) > 15 && Math.abs(a.x) < 15 || Math.abs(a.y) > 10 && a.y < 0 && Math.abs(a.x) < 10)
                                return void r();
                            e.preventDefault();
                            var i = n.left + a.x;
                            this.elem.style.left = i + "px",
                            a.left = i
                        }
                    }
                    ,
                    this.transitionEndHandler = function() {
                        this.elem.classList.remove("slide-animate"),
                        this.elem.removeEventListener("transitionend", this.transitionEndHandler)
                    }
                    ,
                    this.endHandler = function() {
                        if (!o) {
                            var t = +new Date - n.time
                              , i = parseInt(this.elem.firstElementChild.offsetWidth, 10);
                            if (t > 100) {
                                var s;
                                if (a.x > 15)
                                    s = this.getCurrentIndex(-i / 2),
                                    s > -1 && 0 === s && e(this.elem).animate({
                                        left: 0
                                    }, 200);
                                else if (a.x < -15) {
                                    var l = this.elem.lastElementChild;
                                    l = "none" === l.style.display ? l.previousElementSibling : l;
                                    var c = l.offsetLeft + l.offsetWidth;
                                    a.left + c < this.maxWidth && e(this.elem).animate({
                                        left: -(c - this.maxWidth) + "px"
                                    }, 200)
                                }
                            }
                            r(),
                            this.elem.addEventListener("transitionend", this.transitionEndHandler.bind(this), !1),
                            o = !0
                        }
                    }
                    ,
                    this.isMovable = function() {
                        var e = this.elem.lastElementChild;
                        if (e) {
                            e = "none" === e.style.display ? e.previousElementSibling : e;
                            var t = e.offsetLeft + e.offsetWidth;
                            if (t > this.maxWidth)
                                return !0
                        }
                        return !1
                    }
                    ,
                    this.getCurrentIndex = function(e) {
                        e = e || 0;
                        for (var t = this.elem.children, i = 0, o = t.length; o > i; ++i) {
                            var r = t[i]
                              , s = n.left + a.x
                              , l = r.offsetLeft
                              , c = l + s + e;
                            if (c >= 0 || r.nextElementSibling && r.nextElementSibling.offsetLeft + s + e >= 0)
                                return i
                        }
                        return -1
                    }
                    ;
                    var r = function() {
                        this.elem.removeEventListener("touchmove", this.moveHandler),
                        this.elem.removeEventListener("touchend", this.endHandler)
                    }
                    .bind(this)
                }
            }
            t.exports = i
        }($, t)
    }
    , {}],
    9: [function(e, t) {
        var i = {
            init: function() {
                this.readyFun();
                var e = this;
                $(".site-btn").on("click", function() {
                    e.optionSite(this)
                }),
                this.isSite = !1
            },
            readyFun: function() {
                var e = this;
                e.getLocation(e);
            },
            getLocation: function(e) {
                var t=e;
                navigator.geolocation.getCurrentPosition(function(position){
                    var lat = position.coords.latitude;
                    var lng = position.coords.longitude;
                    t.getName(lat, lng),
                    t.isSite = !1;
                });
            },
            getName: function(e, t) {
                var gc = new BMap.Geocoder();
                gc.getLocation(new BMap.Point(t,e), function(rs){
                    var addComp = rs.addressComponents;
                    $(".select-site").removeClass("show"),
                    $(".select-site").addClass("show-curr"),
                    $(".site-name").attr("data-latitude", e),
                    $(".site-name").attr("data-longitude", t),
                    $(".site-name").text(addComp.city+" "+addComp.street)
                });
            },
            optionSite: function() {
               var e = $(".site-btn").text();
               if("点击开启定位"!= e.trim())
                {
                	$(".select-site").removeClass("show-curr"),
	                $(".select-site").addClass("show"),
	                $(".site-name").attr("data-latitude", "-1"),
	                $(".site-name").attr("data-longitude", "-1"),
	                $(".site-name").text("点击开启定位")
            	}
                else {
                	this.isSite = !1,
	                $(".site-name").text("正在定位中...");
	                $(".select-site").addClass("show-curr")
	                $(".select-site").removeClass("show")
	                this.getLocation(this);
            	}
            }
        };
        t.exports = i
    }
    , {}],
    11: [function(wrapper, cb) {
        var i = {
				    boxWrapper:null,
				    videoWrapper:null,
				    videoData:null,
				    videoNum:1,
				    cb:null,
				    init:function(wrapper,cb){
				        var _this = this;
				        _this.cb = cb;
				        this.boxWrapper = wrapper;
				        var videoWrapper = $(".upload-video");
				        if(videoWrapper && videoWrapper.length != 0){
				            videoWrapper.show();
				        }else{
				            this.boxWrapper.append(this.loadTpl);
				            this.videoWrapper = $(".upload-video");
				            $(".upload-video-btn",this.videoWrapper).bind('click',function(){
				                if(!_this.requestVideo){
				                    _this.requestVideo = true;
				                    _this.videoNum = 0;
				                    _this.analyzeUrl(this);
				                }
				            });
				        }
				    },
				    loadTpl:'<div class="upload-video"><div class="load-video">' +
				            '<div class="video-linkadd">' +
				            '   <input placeholder="粘贴视频地址" type="url" class="video-addr"/>' +
				            '   <button class="upload-video-btn">上传</button>' +
				            '</div>' +
				            '   <p class="video-txt">将视频播放地址(电脑端和手机端)复制粘贴到上方，支持腾讯视频、优酷、土豆。</p>' +
				            '</div></div>',
				    showTpl:function(data){
				        var str = '<div class="show-video none" videoId="<%=vid%>">' +
				                  '     <a class="del-video-btn upload_delete" href="#"></a>' +
				                  '     <iframe class="video-iframe" src="<%=embedVideoURL%>" frameborder="0" allowfullscreen >' +
				                  '     您的浏览器不支持视频播放</iframe> ' +
				                  '   <div class="video-info-mod"><span class="ellipsis video-info"><%=title%></span><span class="video-ly"><%=videoTypeName%></span></div>' +
				                  '</div>';
				        if(data.embedVideoURL.split("?").length == 1){
				            data.embedVideoURL = data.embedVideoURL + "?auto=0&tiny=0";
				        }else{
				            data.embedVideoURL = data.embedVideoURL + "&auto=0&tiny=0";
				        }
				        if(data.keys){
				            data.vid = data.keys.vid;
				        }else{
				            data.vid = '';
				        }

				        switch (data.videoType){
				            case "TECENT":data.videoTypeName = "腾讯视频";break;
				            case "YOUKU":data.videoTypeName = "优酷视频";break;
				            case "TUDOU":data.videoTypeName = "土豆视频";break;
				            default:data.videoTypeName = "";break;
				        }

				        return _.template(str)(data);
				    },
				    requestVideo:false,
				    tips:function(str,time){
				        var _left = ($(window).width() - 145)/2 +"px";
				        var obj = {'str':str};

				        var tipsDiv = $(".videoTips");
				        if(tipsDiv.length == 0){
				            var _str = '<div class="videoTips tips" style="left:'+_left+'">'+str+'</div>';
				            $('body').append(_.template(_str)(obj));
				        }else{
				            tipsDiv.text(obj.str);
				        }

				        $(".videoTips").css("visibility",'visible');
				        if(time){
				            setTimeout(function(){
				                $(".videoTips").css("visibility",'hidden');
				            },time);
				        }
				    },
				    analyzeUrl:function(obj){
				        var _this = this;
				        var _url = $(".video-addr").val();
				        if(!_url.match(this.urlRex)){
				            _this.requestVideo = false;
				           return;
				        }
				        _this.tips('视频正在上传中,请稍候...');
				        $.ajax({
				            url:urlarr['analyzeUrl'],
				            type:'POST',
				            data:{
				              url:_url,
				              'userId': Tribe.userId
				            },
				            dataType:'json'
				        }).done(function(resp){
				            if(resp.success){
				                _this.videoWrapper.append(_this.showTpl(resp.message));
				                _this.videoData = resp.message;
				                $(".load-video").removeClass("page-from-left");
				                $(".load-video").addClass("none");
				                $(".show-video").addClass("page-from-left");
				                $(".del-video-btn",_this.videoWrapper).bind('click',_this.delVideo);
				                _this.requestVideo = false;
				                _this.tips("视频上传成功",3000);

				                if(typeof (_this.cb) == 'function'){
				                    _this.cb(_this.videoData);
				                }

				            }else{
				                _this.videoNum ++ ;
				                if(_this.videoNum <= 3){
				                    _this.analyzeUrl();
				                }else{
				                    $(".videoTips").css("visibility",'hidden');
				                    if(resp.message.error_code == "30017"){
				                        Tribe.util.tips("该地址暂时不支持获取视频分享内容,请更换地址", 2000);
				                    }else{
				                        Tribe.util.tips("上传失败，请检查网络或重新上传", 2000);
				                    }

				                    _this.videoNum = 1;
				                    _this.requestVideo = false;
				                }
				            }
				        });
				    },
				    urlRex:/(http|https|ftp|Http)\:\/\/[\.\-\_\/a-zA-Z0-9\~\?\%\#\=\@\:\&\;\*\+\!\(\)\{\}]+\b[\?\#\/\*\=]*/g,
				    delVideo:function(obj){
				        var _this = obj;
				        $(this).parent().remove();
				        $(".load-video").addClass("page-from-left");
				    }
				};
        cb.exports = i
    }
    , {}],
    12: [function(lid, sid) {
        var i = {
			    localId: [],
			    serverId: [],
			    downloadId: [],
			    getIds: function (lid, sid) {
			        var me = this;
			        $.ajax({
			            url: '/thirdapp/forum/wxUploadImage',
			            type: 'POST',
			            dataType: 'json',
			            data: {
			                weixinFileId: sid
			            }
			        }).then(function (resp) {
			            if (resp.success) {
			                var fileids = $("#sendMsg").attr('data-fileids');

			                    var fid = resp.message[sid];
			                    if(fid){
			                        fileids = (fileids == '') ? fid : (fileids += ',' + fid);
			                        $("#sendMsg").attr('data-fileids', fileids).removeClass('bg-gray');
			                        if ($('.upload_append_list').length === 9 || $('.upload_append_list').length > 9) {
			                           $('#add').hide();
			                        }
			                        $('.upload_delete[data-index="' + lid + '"]').attr('data-fileid', fid);
			                        $("#uploadProgress_" + lid).hide();
			                    }else{
			                        $("#uploadImage_" + lid).closest('.upload_append_list').remove();
			                    }

			            } else {

			                Tribe.util.tips("上传失败", 2000);
			                $("#uploadImage_" + lid).closest('.upload_append_list').remove();
			            }
			        }, function (msg) {
			            Tribe.util.tips("上传失败", 2000);

			            for(var j=0;j<lid.length;j++){
			                var _lid = lid[j];
			                $("#uploadImage_" + _lid).closest('.upload_append_list').remove();
			            }

			        });
			    },
			    clickFun: function (obj) {
			        if (typeof obj == undefined) return;
			        var _this = obj;
			        $(_this).parents('.upload_append_list').remove();

			        var arr = $("#sendMsg").attr('data-fileids').split(',');
			        for (var i = 0; i < arr.length; i++) {
			            if ($(_this).attr('data-fileid') == arr[i]) {
			                arr.splice(i, 1);
			            }
			        }
			        $("#sendMsg").attr('data-fileids', arr.toString());
			        if (arr.length === 0) {
			            $("#sendMsg").attr('data-fileids', '');
			            $('#add').hide();
			        }
			        if ($('.upload_append_list').length < 9) {
			            $('#add').css('display', 'inline-block');
			            $(".fileImage").removeAttr('disabled');
			        }
			        if ($('.upload_append_list').length < 1 && $("#editor").html() == "") {
			            $("#sendMsg").addClass('bg-gray');
			        }
			    },
			    tpl: function (id) {
			        var html = '',
			            reg = /\:|\//g,
			            itemId = id.replace(reg, ''),
			            me = this;
			        html += '<div data-id="' + itemId + '" class="upload_append_list">' +
			            '<span class="upload_delete" title="删除" data-index="' + itemId + '"></span>' +
			            '<p>' +
			            '<img id="uploadImage_' + itemId + '" src="' + id + '" class="upload_image" /></p>' +
			            '<div class="progress" id="uploadProgress_' + itemId + '"><div class="progress-bar"></div><img src="/thirdapp/forum/img/new_loading.gif" class="loading" /></div>' +
			            '</div>';
			        var $add = $("#add");
			        $add.before(html);
			        $('.upload_delete[data-index="' + itemId + '"]').on('click', function () {
			            me.clickFun(this);
			        });

			    },
			    wxUpload: function () {
			        var i = 0, me = this, length = me.localId.length, reg = /\:|\//g;
			        function upload() {
			            var lid = me.localId[i].replace(reg, '');
			            wx.uploadImage({
			                localId: me.localId[i],
			                isShowProgressTips: 0,
			                success: function (res) {
			                    i++;
			                    //判断微信上传的图片的mediaId是否为空
			                    if(!res.serverId){
			                        $("#uploadImage_" + lid).closest('.upload_append_list').remove();
			                    }else{
			                        me.getIds(lid, res.serverId);
			                        if (i < length) {
			                            upload();
			                        }
			                    }

			                },
			                fail: function (res) {
			                    Tribe.util.tips("上传失败", 2000);
			                    $("#uploadImage_" + lid).closest('.upload_append_list').remove();
			                    i++;
			                    if (i < length) {
			                        upload();
			                    }
			                }
			            });
			        }
			        upload();
			    },
			    chooseImg: function () {
			        var me = this, i;
			        wx.chooseImage({
			            sizeType: ['original'],
			            success: function (res) {
			                me.localId = res.localIds;
			                var len = me.localId.length;
			                var now_len = document.querySelector('.upload-box-container').getElementsByClassName('upload_append_list').length;
			                if ((now_len + len ) > 9) {
			                    len = 9 - now_len;
			                    Tribe.util.tips("最多只能显示9张图片", 2000);
			                    return;
			                }
			                for (i = 0; i < me.localId.length; i++) {
			                    me.tpl(me.localId[i]);
			                }
			                me.wxUpload();
			            }
			        });
			    },
			    init: function () {
			        var me = this;
			        $("body").on('click', '#fromWx', function () {
			                me.chooseImg();
			        });
			    }
			};;
        sid.exports = i
    }
    , {}],
    13: [function(e, t) {
        function i(e) {
            switch (typeof e) {
            case "string":
                return e;
            case "boolean":
                return e ? "true" : "false";
            case "number":
                return isFinite(e) ? e + "" : "";
            default:
                return ""
            }
        }
        var n = Object.keys && Array.map && Array.isArray ? function(e, t, n) {
            return t = t || "&",
            n = n || "=",
            null === e && (e = void 0),
            "object" == typeof e ? Object.keys(e).map(function(a) {
                var o = encodeURIComponent(i(a)) + n;
                return Array.isArray(e[a]) ? e[a].map(function(e) {
                    return o + encodeURIComponent(i(e))
                }).join(t) : o + encodeURIComponent(i(e[a]))
            }).join(t) : ""
        }
        : function(e, t, n) {
            t = t || "&",
            n = n || "=",
            null === e && (e = void 0);
            var a = "";
            if ("object" == typeof e) {
                var o, r, s, l, c;
                for (c in e)
                    if (e.hasOwnProperty(c))
                        if (o = encodeURIComponent(c) + n,
                        l = e[c],
                        "[object Array]" === Object.prototype.toString.call(e[c]))
                            for (r = 0; r < l.length; r++)
                                s = l[r],
                                a += o + encodeURIComponent(i(s)) + t;
                        else
                            a += o + encodeURIComponent(i(l)) + t;
                a = a.slice(0, a.length - 1)
            }
            return a
        }
          , a = function(e, t, i) {
            t = t || "&",
            i = i || "=";
            var n = {};
            if ("string" != typeof e || !e.length)
                return n;
            var a = /\+/g;
            e = e.split(t);
            for (var o, r, s, l, c = 0, d = e.length; d > c; c++)
                o = e[c].replace(a, "%20"),
                l = o.indexOf(i),
                l >= 0 ? (r = o.slice(0, l),
                s = o.slice(l + 1)) : (r = o,
                s = ""),
                r = decodeURIComponent(r),
                s = decodeURIComponent(s),
                n.hasOwnProperty(r) ? "[object Array]" === Object.prototype.toString.call(n[r]) ? n[r].push(s) : n[r] = [n[r], s] : n[r] = s;
            return n
        }
          , o = {
            parse: a,
            stringify: n
        };
        t.exports = o
    }
    , {}],
    14: [function(e, t) {
        function i(e) {
            for (var t = window.atob(e), i = new ArrayBuffer(t.length), n = new Uint8Array(i), a = 0; a < t.length; a++)
                n[a] = t.charCodeAt(a);
            return new Blob([i],{
                type: "image/png"
            })
        }
        var n = {
            fileInput: null ,
            fileFilter: [],
            filter: function(e) {
                return e
            },
            onSelect: function() {},
            onDelete: function() {},
            onProgress: function() {},
            onSuccess: function() {},
            onFailure: function() {},
            onComplete: function() {},
            onBeforeSend: function() {},
            funGetFiles: function(e) {
                var t = e.target.files || e.dataTransfer.files;
                return this.fileFilter = this.filter(t),
                this.funDealFiles(),
                this
            },
            index: (new Date).getTime(),
            funDealFiles: function() {
                for (var e, t = 0; e = this.fileFilter[t]; t++)
                    e.index = this.index++,
                    this.onSelect(this.fileFilter[t]);
                return this
            },
            funUploadFile: function() {
                for (var e, t = this, i = 0; e = this.fileFilter[i]; i++)
                    !function(e) {
                        var i = new FormData
                          , n = (new Date).getTime();
                        i.append("name", "Html 5 File API/FormData"),
                        i.append("fileToUpload", e, e.name);
                        var a = new XMLHttpRequest;
                        if (a.upload) {
                            t.onBeforeSend(e),
                            a.upload.addEventListener("progress", function(i) {
                                t.onProgress(e, i.loaded, i.total)
                            }, !1),
                            a.onreadystatechange = function() {
                                4 == a.readyState && (200 == a.status && "" != a.responseText && null != a.responseText ? (t.onSuccess(e, a.responseText),
                                t.fileFilter.length || t.onComplete()) : t.onFailure(e, a.responseText))
                            }
                            ;
                            var r = Tribe.userId || "";
                            a.open("POST", t.url + "?t=" + n + "&ownerId=" + r, !0),
                            a.send(i)
                        }
                    }(e)
            },
            uploadFile: function(e) {
                var t = this;
				t.funUploadFile(e);
            },
            init: function() {
                var e = this;
                if(this.fileInput.length && "file" == this.fileInput.attr("type") && !window.user_community)
                {
                	this.fileInput.on("change", function(t) {
	                    e.funGetFiles(t),
	                    e.uploadFile(t)
	                }, !1)
		        }
		        else{
		        	this.fileInput.on("click", function() {
		                window.user_community.pickImage()
		            });
		    	}
            }
        };
        window.uploadPicture = function(e) {
            var t = i(e);
            t.name = "frombuluo.png";
            var a = {
                target: {
                    files: [t]
                }
            };
            n.funGetFiles(a),
            n.uploadFile(a)
        }
        ,
        t.exports = n
    }
    , {}],
    15: [function(e, t, i) {
        "use strict";
        function n(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        {
            var a = function() {
                function e(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value"in n && (n.writable = !0),
                        Object.defineProperty(e, n.key, n)
                    }
                }
                return function(t, i, n) {
                    return i && e(t.prototype, i),
                    n && e(t, n),
                    t
                }
            }();
            i.RequestUrl = function() {
                function e() {
                    var t = arguments.length <= 0 || void 0 === arguments[0] ? {} : arguments[0];
                    n(this, e),
                    this.obj = t
                }
                return a(e, [], [{
                    key: "getInstance",
                    value: function() {
                        for (var e = arguments.length, t = Array(e), i = 0; e > i; i++)
                            t[i] = arguments[i];
                        this.instance || (this.instance = new (Function.prototype.bind.apply(this, [null ].concat(t)))),
                        this.instance.init()
                    }
                }]),
                e
            }()
        }
    }
    , {}],
    16: [function(e, t) {
        var i = {
		    isNull:function(value){
		        if(value == null || typeof(value) == "undefined") return true;
		        return false;
		    },
		    isTel:function(telNum){
		        if(this.isNull(telNum)) return false;
		        //判断是否是手机号码
		        if(telNum.length != 11) return false;
		        var reg1 = /(1[3|5|7|8|][0-9]{9})/g;
		        if(telNum.match(reg1)) return true;

		        return false;
		    },
		    isTrim:function(value){
		        if(this.isNull(value)) return false;
		        var reg1 = /\S/g;
		        var _value = value.match(reg1);
		        if(_value) return true;

		        return false;
		    }
        };
        t.exports = i
    }
    , {}],
    17: [function(e) {
        "use strict";
        function t() {
            var e = location.search;
            if (e) {
                var t = s.parse(e.substring(1).split("#")[0])
                  , i = t.content;
                if (i) {
                    var n = document.getElementById("editor");
                    n.innerHtml = i + " ";
                    var a = document.getElementById("sendMsg");
                    a.classList.contains("bg-gray") && a.classList.remove("bg-gray")
                }
            }
        }
        function i() {
            $(".select-site").css("display", "inline-block");
            $(".site-name").text("正在定位中...");
            u.init();
            $("#editor").click();
        }
        var n = e("../component/imgSlider.js")
          , a = e("../component/img-uploader")
          , o = e("../component/wxUploadImage")
          , s = e("../lib/plugin/querystring")
          , l = e("../component/aite-list")
          , c = /Qing\/.*;(iPhone|Android).*/.test(navigator.userAgent)
          , u = e("../component/share-location")
          , h = e("../component/video")
          , g = ""
          , b = {
            blueprintId: $("#sendMsg").attr("data-blueprintId"),
            init: function() {
                var e = this;
                Tribe.util.PCTaptoClick($("#sendMsg"), function() {
                    var t = $(this);
                    e.sendPosts(t, !1, !1, !1);
                })
            },
            sendPosts: function(e, t, i, n) {
                var a = this
                  , o = $(e)
                  , r = o.attr("data-fileids");
                r = r && r.split(",") || [];
                var s = o.attr("data-networkid")
                  , l = $.trim($("#editor").html())
                  , c = $(".show-video")
                  , d = $(".j-buyersShowItem")
                  , m = $("#sendMsg")
                  , v = ""
                  , b = [o.attr("data-wx-aite"), o.attr("data-yzj-aite")];

                "" != $("#editor").attr("data-type") && (l = "#" + $("#editor").attr("data-type") + "#" + l);
                var y = $("#phizWrapper");

                if (0 != y.length && y.hide(),!o.hasClass("")) {
                    if ($(".upload_append_list").length > r.length)
                        return Tribe.util.tips("图片上传中，请稍后", 2e3),
                        !1;
                    "" == $.trim($("#editor").html()) && r.length && (l += "分享图片"),
                    "" == $.trim($("#editor").html()) && c.length > 0 && (l = l + '分享视频"' + g.title + '"');
                    for (var w = 0; w < $(".progress").length; w++)
                        if ($(".progress").eq(w).is(":visible"))
                            return !1;
                    if (!l)
                        return m.addClass(""),
                        Tribe.util.tips("发送内容为空", 2e3),
                        !1;
                    if ($("#sending").is(":visible"))
                        return !1;
                    $("body").append('<div class="tips" id="sending" ><span class="loadIng"></span>发送中...</div>');
                    var T = $(".site-name").attr("data-longitude")
                      , k = $(".site-name").attr("data-latitude")
                      , x = $(".site-name").text();
                    ("正在定位中..." == x || "点击开启定位" == x) && (x = "");
                    $.ajax({
                        type: "POST",
                        url: urlarr["sendMsg"],
                        data: {
                        	userId:Tribe.userId,
                            content: l,
                            location: x || "",
                            fileids: JSON.stringify([{
                                userId: Tribe.userId,
                                fileIds: r
                            }])
                        },
                        context: $("#msgList"),
                        success: function(e) {
                            if(e.success){
                                Tribe.util.tips("@all推送成功", 3e3)
                            }else{
                                Tribe.util.tips("发送失败，请重试", 2e3)
                            }
                            $("#sending").remove();
                        },
                        error: function() {
                            $("#sending").remove(),
                            Tribe.util.tips("发送失败，请重试", 2e3),
                            console.log("Ajax error!")
                        }
                    })
                }
            }
        }
          , y = {
            init: function() {
                var e = this;
                e._height = $(window).height(),

                $(".video-btn").click(function() {
                    e.getVideo(this)
                }),
                $(".upload-box").show(),

                $(".msg-btn").parent().addClass("curr"),

                $(".msg-btn").on("click", function(t) {
                    e.getMsg(t, this)
                }),
                $(".phiz-btn").on("click", function(t) {
                    e.getPhiz(t, this)
                }),
                $(".aite-btn").on("click", function(t) {
                    e.getAite(t, this)
                })
            },
            sendParams: function() {
                $.ajax({
                    type: "GET",
                    url: "thirdapp/forum/sendMsg/sendParams",
                    dataType: "json"
                }).done(function(e) {
                    if (e && e.success) {
                        var t = e.message.forceChooseSection
                          , i = $("#sendMsg");
                        t ? i.attr("data-section", "true") : i.attr("data-section", "false")
                    }
                })
            },
            imageOrVideo: function(e) {
                var t;
                switch (e) {
                case 2:
                    t = $(".upload_append_list");
                    break;
                case 1:
                    t = $(".show-video")
                }
                return t && 0 == t.length || !t ? !1 : !0
            },
            getVideo: function(e) {
                var t = e;
                if (this.imageOrVideo(2))
                    return void Tribe.util.tips("图片和视频不能一起上传。", 2e3);
                this.changeStatus(t),
                this.boxStatus(5, [1, 2, 3, 4, 6, 7]);
                var i = function(e) {
                    var t = $(".show-video");
                    0 != t.length && $("#sendMsg").removeClass("bg-gray"),
                    g = e
                }
                ;
                h.init($("#editorWrap"), i)
            },
            changeStatus: function(e) {
                $(".post-func-area").children().removeClass("curr"),
                $(e).parent().addClass("curr")
            },
            getAite: function(e, t) {
                e.preventDefault();
                var i = this
                  , n = $(".person-list-wrapper")
                  , a = {};
                a.boxWrap = $("#editor")
                a.aiteWrap = n,
                a.windowHeight = i._height,
                a.sendBtn = $("#sendMsg");
                var o = new l(a,c)
                  , r = function() {
                    $($(".aite-btn")[0].parentNode).removeClass("curr"),
                    $("body").css("height", "auto"),
                    document.body.style.overflow = "auto",
                    document.documentElement.style.overflow = "auto";
                    var e = document.getElementById("sendMsg");
                    e.classList.contains("bg-gray") && e.classList.remove("bg-gray"),
                    $(".post-func-area li:visible").eq(0).children("a").click()
                }
                ;
                o.init(r),
                this.boxStatus(4, [1, 2, 3, 5, 6, 7]),
                $(".person-list-wrapper").fadeIn()
            },
            getPhiz: function(e, t) {
                e.preventDefault();
                var i = $("#phizWrapper");
                if (1 != i.length || "block" != i[0].style.display) {
                    this.changeStatus(this),
                    Tribe.util.initArr();
                    var n = function() {
                        var e = $("#editor").html()
                          , t = document.getElementById("sendMsg");
                        t.classList.contains("bg-gray") && "" != e && null != e ? t.classList.remove("bg-gray") : t.classList.contains("bg-gray") || "" != e && null != e || t.classList.add("bg-gray")
                    }
                      , t = {};
                    t.editorBox = $("#editor"),
                    t.wrapper = $("#editorWrap"),
                    Tribe.util.init(t, n),
                    this.boxStatus(3, [1, 2, 4, 5, 6, 7])
                }
            },
            getMsg: function(e) {
                return e.preventDefault(),
                this.imageOrVideo(1) ? void Tribe.util.tips("图片和视频不能一起上传。", 2e3) : (this.boxStatus(2, [1, 3, 4, 5, 6, 7]),
                void $(".upload-box").show())
            },
            editorFocus: function() {},
            funcArr: ["topic-item-mod", "upload-box", "phiz-wrapper", "person-list-wrapper", "upload-video", "j-phone-wrapper", "j-buyersShow-wrapper"],
            btnArr: ["topic-btn-item", "msg-btn", "phiz-btn", "aite-btn", "video-btn", "phone-btn", "buyersShow-btn"],
            nowVideoSrc: "",
            boxStatus: function(e, t) {
                for (var i = 0; i < t.length; i++)
                    5 == t[i] && this.videoOption(!1),
                    $("." + this.funcArr[t[i] - 1]).hide(),
                    $("." + this.btnArr[t[i] - 1]).parent().removeClass("curr");
                5 == e && this.videoOption(!0),
                $("." + this.funcArr[e - 1]).show(),
                $("." + this.btnArr[e - 1]).parent().addClass("curr")
            },
            videoSource: "",
            videoOption: function(e) {
                var t = $(".show-video")
                  , i = t.css("display")
                  , n = $(".video-iframe");
                if ("none" == i && e) {
                    {
                        this.videoSource
                    }
                    $(".video-info-mod").before(this.videoTpl()),
                    t.show()
                } else
                    "block" != i || e || (this.videoSource = n.attr("src"),
                    n.remove(),
                    t.hide())
            },
            videoTpl: function() {
                var e = "<iframe class='video-iframe' src='" + this.videoSource + "' frameborder='0' allowfullscreen='' allowtransparency='false' width='100%'> 您的浏览器不支持视频播放</iframe>";
                return _.template(e)()
            }
        };
        Zepto(function(e) {
            function r(e) {
                var t = e.target
                  , i = t.value
                  , n = document.getElementById("sendMsg");
                i ? n.classList.remove("bg-gray") : n.classList.add("bg-gray")
            }
            var s = (e(window).height(),
            document.getElementById("editor"))
              , l = e("#sendMsg");
            s.addEventListener("propertychange", r, !1),
            s.addEventListener("input", r, !1),
            wx.config({
                debug: !1,
                appId: l.attr("data-appid"),
                timestamp: l.attr("data-timestamp"),
                nonceStr: l.attr("data-noncestr"),
                signature: l.attr("data-signature"),
                jsApiList: ["checkJsApi", "getLocation", "chooseImage", "uploadImage", "downloadImage", "previewImage"]
            }),
            wx.ready(function() {
                i(),
                o.init();
            }),
            y.init(),
            b.init(),
            navigator.userAgent.indexOf("sendUser") > -1 && "android" == Tribe.util.getOS() && e(".fileImage").attr("type", "button"),
            a.init(),
            new n(document.getElementsByClassName("upload-box-container")[0]).init(),
            t()
        })
    }
    , {
        "../component/aite-list": 1,
        "../component/img-uploader": 6,
        "../component/imgSlider.js": 7,
        "../component/share-location": 9,
        "../component/video": 11,
        "../component/wxUploadImage": 12,
        "../lib/plugin/querystring": 13
    }],
    18: [function(e, t) {
        !function() {
            "use strict";
            function e(t, i) {
                function a(e, t) {
                    return function() {
                        return e.apply(t, arguments)
                    }
                }
                var o;
                if (i = i || {},
                this.trackingClick = !1,
                this.trackingClickStart = 0,
                this.targetElement = null ,
                this.touchStartX = 0,
                this.touchStartY = 0,
                this.lastTouchIdentifier = 0,
                this.touchBoundary = i.touchBoundary || 10,
                this.layer = t,
                this.tapDelay = i.tapDelay || 200,
                this.tapTimeout = i.tapTimeout || 700,
                !e.notNeeded(t)) {
                    for (var r = ["onMouse", "onClick", "onTouchStart", "onTouchMove", "onTouchEnd", "onTouchCancel"], s = this, l = 0, c = r.length; c > l; l++)
                        s[r[l]] = a(s[r[l]], s);
                    n && (t.addEventListener("mouseover", this.onMouse, !0),
                    t.addEventListener("mousedown", this.onMouse, !0),
                    t.addEventListener("mouseup", this.onMouse, !0)),
                    t.addEventListener("click", this.onClick, !0),
                    t.addEventListener("touchstart", this.onTouchStart, !1),
                    t.addEventListener("touchmove", this.onTouchMove, !1),
                    t.addEventListener("touchend", this.onTouchEnd, !1),
                    t.addEventListener("touchcancel", this.onTouchCancel, !1),
                    Event.prototype.stopImmediatePropagation || (t.removeEventListener = function(e, i, n) {
                        var a = Node.prototype.removeEventListener;
                        "click" === e ? a.call(t, e, i.hijacked || i, n) : a.call(t, e, i, n)
                    }
                    ,
                    t.addEventListener = function(e, i, n) {
                        var a = Node.prototype.addEventListener;
                        "click" === e ? a.call(t, e, i.hijacked || (i.hijacked = function(e) {
                            e.propagationStopped || i(e)
                        }
                        ), n) : a.call(t, e, i, n)
                    }
                    ),
                    "function" == typeof t.onclick && (o = t.onclick,
                    t.addEventListener("click", function(e) {
                        o(e)
                    }, !1),
                    t.onclick = null )
                }
            }
            var i = navigator.userAgent.indexOf("Windows Phone") >= 0
              , n = navigator.userAgent.indexOf("Android") > 0 && !i
              , a = /iP(ad|hone|od)/.test(navigator.userAgent) && !i
              , o = a && /OS 4_\d(_\d)?/.test(navigator.userAgent)
              , r = a && /OS [6-7]_\d/.test(navigator.userAgent)
              , s = navigator.userAgent.indexOf("BB10") > 0;
            e.prototype.needsClick = function(e) {
                switch (e.nodeName.toLowerCase()) {
                case "button":
                case "select":
                case "textarea":
                    if (e.disabled)
                        return !0;
                    break;
                case "input":
                    if (a && "file" === e.type || e.disabled)
                        return !0;
                    break;
                case "label":
                case "iframe":
                case "video":
                    return !0
                }
                return /\bneedsclick\b/.test(e.className)
            }
            ,
            e.prototype.needsFocus = function(e) {
                switch (e.nodeName.toLowerCase()) {
                case "textarea":
                    return !0;
                case "select":
                    return !n;
                case "input":
                    switch (e.type) {
                    case "button":
                    case "checkbox":
                    case "file":
                    case "image":
                    case "radio":
                    case "submit":
                        return !1
                    }
                    return !e.disabled && !e.readOnly;
                default:
                    return /\bneedsfocus\b/.test(e.className)
                }
            }
            ,
            e.prototype.sendClick = function(e, t) {
                var i, n;
                document.activeElement && document.activeElement !== e && document.activeElement.blur(),
                n = t.changedTouches[0],
                i = document.createEvent("MouseEvents"),
                i.initMouseEvent(this.determineEventType(e), !0, !0, window, 1, n.screenX, n.screenY, n.clientX, n.clientY, !1, !1, !1, !1, 0, null ),
                i.forwardedTouchEvent = !0,
                e.dispatchEvent(i)
            }
            ,
            e.prototype.determineEventType = function(e) {
                return n && "select" === e.tagName.toLowerCase() ? "mousedown" : "click"
            }
            ,
            e.prototype.focus = function(e) {
                var t;
                a && e.setSelectionRange && 0 !== e.type.indexOf("date") && "time" !== e.type && "month" !== e.type ? (t = e.value.length,
                e.setSelectionRange(t, t)) : e.focus()
            }
            ,
            e.prototype.updateScrollParent = function(e) {
                var t, i;
                if (t = e.fastClickScrollParent,
                !t || !t.contains(e)) {
                    i = e;
                    do {
                        if (i.scrollHeight > i.offsetHeight) {
                            t = i,
                            e.fastClickScrollParent = i;
                            break
                        }
                        i = i.parentElement
                    } while (i)
                }
                t && (t.fastClickLastScrollTop = t.scrollTop)
            }
            ,
            e.prototype.getTargetElementFromEventTarget = function(e) {
                return e.nodeType === Node.TEXT_NODE ? e.parentNode : e
            }
            ,
            e.prototype.onTouchStart = function(e) {
                var t, i, n;
                if (e.targetTouches.length > 1)
                    return !0;
                if (t = this.getTargetElementFromEventTarget(e.target),
                i = e.targetTouches[0],
                a) {
                    if (n = window.getSelection(),
                    n.rangeCount && !n.isCollapsed)
                        return !0;
                    if (!o) {
                        if (i.identifier && i.identifier === this.lastTouchIdentifier)
                            return e.preventDefault(),
                            !1;
                        this.lastTouchIdentifier = i.identifier,
                        this.updateScrollParent(t)
                    }
                }
                return this.trackingClick = !0,
                this.trackingClickStart = e.timeStamp,
                this.targetElement = t,
                this.touchStartX = i.pageX,
                this.touchStartY = i.pageY,
                e.timeStamp - this.lastClickTime < this.tapDelay && e.preventDefault(),
                !0
            }
            ,
            e.prototype.touchHasMoved = function(e) {
                var t = e.changedTouches[0]
                  , i = this.touchBoundary;
                return Math.abs(t.pageX - this.touchStartX) > i || Math.abs(t.pageY - this.touchStartY) > i ? !0 : !1
            }
            ,
            e.prototype.onTouchMove = function(e) {
                return this.trackingClick ? ((this.targetElement !== this.getTargetElementFromEventTarget(e.target) || this.touchHasMoved(e)) && (this.trackingClick = !1,
                this.targetElement = null ),
                !0) : !0
            }
            ,
            e.prototype.findControl = function(e) {
                return void 0 !== e.control ? e.control : e.htmlFor ? document.getElementById(e.htmlFor) : e.querySelector("button, input:not([type=hidden]), keygen, meter, output, progress, select, textarea")
            }
            ,
            e.prototype.onTouchEnd = function(e) {
                var t, i, s, l, c, d = this.targetElement;
                if (!this.trackingClick)
                    return !0;
                if (e.timeStamp - this.lastClickTime < this.tapDelay)
                    return this.cancelNextClick = !0,
                    !0;
                if (e.timeStamp - this.trackingClickStart > this.tapTimeout)
                    return !0;
                if (this.cancelNextClick = !1,
                this.lastClickTime = e.timeStamp,
                i = this.trackingClickStart,
                this.trackingClick = !1,
                this.trackingClickStart = 0,
                r && (c = e.changedTouches[0],
                d = document.elementFromPoint(c.pageX - window.pageXOffset, c.pageY - window.pageYOffset) || d,
                d.fastClickScrollParent = this.targetElement.fastClickScrollParent),
                s = d.tagName.toLowerCase(),
                "label" === s) {
                    if (t = this.findControl(d)) {
                        if (this.focus(d),
                        n)
                            return !1;
                        d = t
                    }
                } else if (this.needsFocus(d))
                    return e.timeStamp - i > 100 || a && window.top !== window && "input" === s ? (this.targetElement = null ,
                    !1) : (this.focus(d),
                    this.sendClick(d, e),
                    a && "select" === s || (this.targetElement = null ,
                    e.preventDefault()),
                    !1);
                return a && !o && (l = d.fastClickScrollParent,
                l && l.fastClickLastScrollTop !== l.scrollTop) ? !0 : (this.needsClick(d) || (e.preventDefault(),
                this.sendClick(d, e)),
                !1)
            }
            ,
            e.prototype.onTouchCancel = function() {
                this.trackingClick = !1,
                this.targetElement = null
            }
            ,
            e.prototype.onMouse = function(e) {
                return this.targetElement ? e.forwardedTouchEvent ? !0 : e.cancelable && (!this.needsClick(this.targetElement) || this.cancelNextClick) ? (e.stopImmediatePropagation ? e.stopImmediatePropagation() : e.propagationStopped = !0,
                e.stopPropagation(),
                e.preventDefault(),
                !1) : !0 : !0
            }
            ,
            e.prototype.onClick = function(e) {
                var t;
                return this.trackingClick ? (this.targetElement = null ,
                this.trackingClick = !1,
                !0) : "submit" === e.target.type && 0 === e.detail ? !0 : (t = this.onMouse(e),
                t || (this.targetElement = null ),
                t)
            }
            ,
            e.prototype.destroy = function() {
                var e = this.layer;
                n && (e.removeEventListener("mouseover", this.onMouse, !0),
                e.removeEventListener("mousedown", this.onMouse, !0),
                e.removeEventListener("mouseup", this.onMouse, !0)),
                e.removeEventListener("click", this.onClick, !0),
                e.removeEventListener("touchstart", this.onTouchStart, !1),
                e.removeEventListener("touchmove", this.onTouchMove, !1),
                e.removeEventListener("touchend", this.onTouchEnd, !1),
                e.removeEventListener("touchcancel", this.onTouchCancel, !1)
            }
            ,
            e.notNeeded = function(e) {
                var t, i, a, o;
                if ("undefined" == typeof window.ontouchstart)
                    return !0;
                if (i = +(/Chrome\/([0-9]+)/.exec(navigator.userAgent) || [, 0])[1]) {
                    if (!n)
                        return !0;
                    if (t = document.querySelector("meta[name=viewport]")) {
                        if (-1 !== t.content.indexOf("user-scalable=no"))
                            return !0;
                        if (i > 31 && document.documentElement.scrollWidth <= window.outerWidth)
                            return !0
                    }
                }
                if (s && (a = navigator.userAgent.match(/Version\/([0-9]*)\.([0-9]*)/),
                a[1] >= 10 && a[2] >= 3 && (t = document.querySelector("meta[name=viewport]")))) {
                    if (-1 !== t.content.indexOf("user-scalable=no"))
                        return !0;
                    if (document.documentElement.scrollWidth <= window.outerWidth)
                        return !0
                }
                return "none" === e.style.msTouchAction || "manipulation" === e.style.touchAction ? !0 : (o = +(/Firefox\/([0-9]+)/.exec(navigator.userAgent) || [, 0])[1],
                o >= 27 && (t = document.querySelector("meta[name=viewport]"),
                t && (-1 !== t.content.indexOf("user-scalable=no") || document.documentElement.scrollWidth <= window.outerWidth)) ? !0 : "none" === e.style.touchAction || "manipulation" === e.style.touchAction ? !0 : !1)
            }
            ,
            e.attach = function(t, i) {
                return new e(t,i)
            }
            ,
            "function" == typeof define && "object" == typeof define.amd && define.amd ? define(function() {
                return e
            }) : "undefined" != typeof t && t.exports ? (t.exports = e.attach,
            t.exports.FastClick = e) : window.FastClick = e
        }()
    }
    , {}]
}, {}, [17]);
